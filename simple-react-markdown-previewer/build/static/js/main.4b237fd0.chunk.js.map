{"version":3,"sources":["components/Toolbar.js","components/Editor.js","components/Preview.js","App.js","index.js"],"names":["Toolbar","props","className","title","text","icon","onClick","Editor","id","onChange","type","value","markdown","Previewer","dangerouslySetInnerHTML","__html","marked","renderer","setOptions","breaks","highlight","code","Prism","languages","javascript","Renderer","link","href","App","state","editorMaximized","previewMazimized","handleChange","bind","handleEditorMaximize","handlePreviewMaximize","e","this","setState","target","classes","Preview","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAaeA,EAVC,SAACC,GACb,OACI,sBAAKC,UAAU,UAAf,UACI,mBAAGA,UAAU,uBAAuBC,MAAM,sBACzCF,EAAMG,KACP,mBAAGF,UAAWD,EAAMI,KAAMC,QAASL,EAAMK,cCItCC,EAVA,SAACN,GACZ,OACI,0BACIO,GAAG,SACHC,SAAUR,EAAMQ,SAChBC,KAAK,OACLC,MAAOV,EAAMW,YCOVC,EAbG,SAACZ,GACf,OACI,qBACIa,wBAAyB,CACrBC,OAAQC,IAAOf,EAAMW,SAAU,CAC3BK,SAAUA,cAGlBT,GAAG,aCHfQ,IAAOE,WAAW,CAChBC,QAAQ,EACRC,UAAW,SAAUC,GACnB,OAAOC,IAAMF,UAAUC,EAAMC,IAAMC,UAAUC,WAAY,kBAI5C,IAAIR,IAAOS,UACnBC,KAAO,SAAUC,EAAMxB,EAAOC,GACrC,MAAM,4BAAN,OAAmCuB,EAAnC,aAA4CvB,EAA5C,SAGF,IAyGewB,E,kDA5Db,WAAY3B,GAAQ,IAAD,8BACjB,cAAMA,IACD4B,MAAQ,CACXjB,SAhDW,sjCAiDXkB,iBAAiB,EACjBC,kBAAkB,GAEpB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,gBAC5B,EAAKE,sBAAwB,EAAKA,sBAAsBF,KAA3B,gBATZ,E,gDAYnB,SAAaG,GACXC,KAAKC,SAAS,CACZ1B,SAAUwB,EAAEG,OAAO5B,U,kCAIvB,WACE0B,KAAKC,SAAS,CACZR,iBAAkBO,KAAKR,MAAMC,oB,mCAIjC,WACEO,KAAKC,SAAS,CACZP,kBAAmBM,KAAKR,MAAME,qB,oBAIlC,WACE,IAAMS,EAAUH,KAAKR,MAAMC,gBACvB,CAAC,uBAAwB,mBAAoB,kBAC7CO,KAAKR,MAAME,iBACT,CAAC,kBAAmB,wBAAyB,kBAC7C,CAAC,aAAc,cAAe,oBACpC,OACE,gCACE,sBAAK7B,UAAWsC,EAAQ,GAAxB,UACE,cAAC,EAAD,CACEnC,KAAMmC,EAAQ,GACdlC,QAAS+B,KAAKH,qBACd9B,KAAK,WACP,cAAC,EAAD,CACEQ,SAAUyB,KAAKR,MAAMjB,SACrBH,SAAU4B,KAAKL,kBAEnB,qBAAK9B,UAAU,cACf,sBAAKA,UAAWsC,EAAQ,GAAxB,UACE,cAAC,EAAD,CACEnC,KAAMmC,EAAQ,GACdlC,QAAS+B,KAAKF,sBACd/B,KAAK,cACP,cAACqC,EAAD,CAAW7B,SAAUyB,KAAKR,MAAMjB,qB,GAtDxB8B,IAAMC,WC1DxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4b237fd0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Toolbar = (props) => {\r\n    return (\r\n        <div className=\"toolbar\">\r\n            <i className=\"fa fa-free-code-camp\" title=\"no-stack-dub-sack\" />\r\n            {props.text}\r\n            <i className={props.icon} onClick={props.onClick} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Toolbar;","import React from 'react';\r\n\r\nconst Editor = (props) => {\r\n    return (\r\n        <textarea\r\n            id=\"editor\"\r\n            onChange={props.onChange}\r\n            type=\"text\"\r\n            value={props.markdown} />\r\n    );\r\n}\r\n\r\nexport default Editor;","import React from 'react';\r\nimport marked, { renderer } from 'marked';\r\nconst Previewer = (props) => {\r\n    return (\r\n        <div\r\n            dangerouslySetInnerHTML={{\r\n                __html: marked(props.markdown, {\r\n                    renderer: renderer\r\n                })\r\n            }}\r\n            id=\"preview\"\r\n        />\r\n    );\r\n}\r\n\r\nexport default Previewer;","import React from 'react';\r\nimport marked from 'marked';\r\nimport Prism from 'prismjs';\r\nimport Toolbar from './components/Toolbar';\r\nimport Editor from './components/Editor';\r\nimport Previewer from './components/Preview';\r\n\r\nmarked.setOptions({\r\n  breaks: true,\r\n  highlight: function (code) {\r\n    return Prism.highlight(code, Prism.languages.javascript, 'javascript');\r\n  }\r\n});\r\n\r\nconst renderer = new marked.Renderer();\r\nrenderer.link = function (href, title, text) {\r\n  return `<a target=\"_blank\" href=\"${href}\">${text}</a>`\r\n};\r\n\r\nconst placeholder = `# Welcome to my React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n\r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n\r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.org), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | -------------\r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbered lists too.\r\n1. Use just 1s if you want!\r\n1. And last but not least, let's not forget embedded images:\r\n\r\n`;\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      markdown: placeholder,\r\n      editorMaximized: false,\r\n      previewMazimized: false\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);;\r\n    this.handleEditorMaximize = this.handleEditorMaximize.bind(this);\r\n    this.handlePreviewMaximize = this.handlePreviewMaximize.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({\r\n      markdown: e.target.value\r\n    });\r\n  }\r\n\r\n  handleEditorMaximize() {\r\n    this.setState({\r\n      editorMaximized: !this.state.editorMaximized\r\n    });\r\n  }\r\n\r\n  handlePreviewMaximize() {\r\n    this.setState({\r\n      previewMazimized: !this.state.previewMazimized\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const classes = this.state.editorMaximized\r\n      ? ['editorWrap maximized', 'previewWrap hide', 'fa fa-compress']\r\n      : this.state.previewMazimized\r\n        ? ['editorWrap hide', 'previewWrap maximized', 'fa fa-compress']\r\n        : ['editorWrap', 'previewWrap', 'fa fa-arrows-alt']\r\n    return (\r\n      <div>\r\n        <div className={classes[0]}>\r\n          <Toolbar\r\n            icon={classes[2]}\r\n            onClick={this.handleEditorMaximize}\r\n            text=\"Editor\" />\r\n          <Editor\r\n            markdown={this.state.markdown}\r\n            onChange={this.handleChange} />\r\n        </div>\r\n        <div className=\"converter\" />\r\n        <div className={classes[1]}>\r\n          <Toolbar\r\n            icon={classes[2]}\r\n            onClick={this.handlePreviewMaximize}\r\n            text=\"Previewer\" />\r\n          <Previewer markdown={this.state.markdown} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}