(this["webpackJsonpsimple-react-markdown-previewer"]=this["webpackJsonpsimple-react-markdown-previewer"]||[]).push([[0],{15:function(e,t,n){},18:function(e,t,n){"use strict";n.r(t);var a=n(1),i=n.n(a),r=n(6),s=n.n(r),o=(n(15),n(7)),d=n(8),c=n(2),l=n(10),h=n(9),m=n(3),u=n.n(m),b=n(5),f=n.n(b),j=n(0),v=function(e){return Object(j.jsxs)("div",{className:"toolbar",children:[Object(j.jsx)("i",{className:"fa fa-free-code-camp",title:"no-stack-dub-sack"}),e.text,Object(j.jsx)("i",{className:e.icon,onClick:e.onClick})]})},w=function(e){return Object(j.jsx)("textarea",{id:"editor",onChange:e.onChange,type:"text",value:e.markdown})},x=function(e){return Object(j.jsx)("div",{dangerouslySetInnerHTML:{__html:u()(e.markdown,{renderer:m.renderer})},id:"preview"})};u.a.setOptions({breaks:!0,highlight:function(e){return f.a.highlight(e,f.a.languages.javascript,"javascript")}}),(new u.a.Renderer).link=function(e,t,n){return'<a target="_blank" href="'.concat(e,'">').concat(n,"</a>")};var k=function(e){Object(l.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(o.a)(this,n),(a=t.call(this,e)).state={markdown:"# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, `<div></div>`, between 2 backticks.\n\n```\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '```' && lastLine == '```') {\n    return multiLineCode;\n  }\n}\n```\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.org), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n",editorMaximized:!1,previewMazimized:!1},a.handleChange=a.handleChange.bind(Object(c.a)(a)),a.handleEditorMaximize=a.handleEditorMaximize.bind(Object(c.a)(a)),a.handlePreviewMaximize=a.handlePreviewMaximize.bind(Object(c.a)(a)),a}return Object(d.a)(n,[{key:"handleChange",value:function(e){this.setState({markdown:e.target.value})}},{key:"handleEditorMaximize",value:function(){this.setState({editorMaximized:!this.state.editorMaximized})}},{key:"handlePreviewMaximize",value:function(){this.setState({previewMazimized:!this.state.previewMazimized})}},{key:"render",value:function(){var e=this.state.editorMaximized?["editorWrap maximized","previewWrap hide","fa fa-compress"]:this.state.previewMazimized?["editorWrap hide","previewWrap maximized","fa fa-compress"]:["editorWrap","previewWrap","fa fa-arrows-alt"];return Object(j.jsxs)("div",{children:[Object(j.jsxs)("div",{className:e[0],children:[Object(j.jsx)(v,{icon:e[2],onClick:this.handleEditorMaximize,text:"Editor"}),Object(j.jsx)(w,{markdown:this.state.markdown,onChange:this.handleChange})]}),Object(j.jsx)("div",{className:"converter"}),Object(j.jsxs)("div",{className:e[1],children:[Object(j.jsx)(v,{icon:e[2],onClick:this.handlePreviewMaximize,text:"Previewer"}),Object(j.jsx)(x,{markdown:this.state.markdown})]})]})}}]),n}(i.a.Component);s.a.render(Object(j.jsx)(i.a.StrictMode,{children:Object(j.jsx)(k,{})}),document.getElementById("root"))}},[[18,1,2]]]);
//# sourceMappingURL=main.4b237fd0.chunk.js.map