{"version":3,"sources":["App.js","components/Buttons.js","components/Formula.js","components/Output.js","index.js"],"names":["isOperator","endsWithOperator","endsWithNegativeSign","App","props","state","currentVal","prevVal","formula","currentSign","lastClicked","maxDigitWarning","bind","handleOperators","handleEvaluate","initialize","handleDecimal","handleNumbers","this","setState","setTimeout","includes","expression","test","slice","replace","answer","Math","round","eval","toString","evaluated","e","value","target","length","match","className","currentValue","decimal","evaluate","numbers","operators","Component","clearStyle","background","operatorStyle","equalsStyle","position","height","bottom","Buttons","style","id","onClick","Formula","Output","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d68ef82.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Buttons from './components/Buttons';\nimport Formula from './components/Formula';\nimport Output from './components/Output';\n\nconst isOperator = /[x/+-]/,\n  endsWithOperator = /[x/+-]$/,\n  endsWithNegativeSign = /\\d[x/+-]{1}-$/\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentVal: '0',\n      prevVal: '0',\n      formula: '',\n      currentSign: 'pos',\n      lastClicked: ''\n    };\n    this.maxDigitWarning = this.maxDigitWarning.bind(this);\n    this.handleOperators = this.handleOperators.bind(this);\n    this.handleEvaluate = this.handleEvaluate.bind(this);\n    this.initialize = this.initialize.bind(this);\n    this.handleDecimal = this.handleDecimal.bind(this);\n    this.handleNumbers = this.handleNumbers.bind(this);\n  }\n\n  maxDigitWarning() {\n    this.setState({\n      currentVal: 'Digit Limit Met',\n      prevVal: this.state.currentVal\n    });\n    setTimeout(() => this.setState({ currentVal: this.state.prevVal }), 1000);\n  }\n\n  handleEvaluate() {\n    if (!this.state.currentVal.includes('Limit')) {\n      let expression = this.state.formula;\n      while (endsWithOperator.test(expression)) {\n        expression = expression.slice(0, -1);\n      }\n      expression = expression\n        .replace(/x/g, '*')\n        .replace(/‑/g, '-')\n        .replace('--', '+0+0+0+0+0+0+');\n      let answer = Math.round(1000000000000 * eval(expression)) / 1000000000000;\n      this.setState({\n        currentVal: answer.toString(),\n        formula:\n          expression\n            .replace(/\\*/g, '⋅')\n            .replace(/-/g, '‑')\n            .replace('+0+0+0+0+0+0+', '‑-')\n            .replace(/(x|\\/|\\+)‑/, '$1-')\n            .replace(/^‑/, '-') +\n          '=' +\n          answer,\n        prevVal: answer,\n        evaluated: true\n      });\n    }\n  }\n\n  handleOperators(e) {\n    if (!this.state.currentVal.includes('Limit')) {\n      const value = e.target.value;\n      const { formula, prevVal, evaluated } = this.state;\n      this.setState({ currentVal: value, evaluated: false });\n      if (evaluated) {\n        this.setState({ formula: prevVal + value });\n      } else if (!endsWithOperator.test(formula)) {\n        this.setState({\n          prevVal: formula,\n          formula: formula + value\n        });\n      } else if (!endsWithNegativeSign.test(formula)) {\n        this.setState({\n          formula:\n            (endsWithNegativeSign.test(formula + value) ? formula : prevVal) + value\n        });\n      } else if (value !== '‑') {\n        this.setState({\n          formula: prevVal + value\n        });\n      }\n    }\n  }\n\n  handleNumbers(e) {\n    if (!this.state.currentVal.includes('Limit')) {\n      const { currentVal, formula, evaluated } = this.state;\n      const value = e.target.value;\n      this.setState({ evaluated: false });\n      if (currentVal.length > 21) {\n        this.maxDigitWarning();\n      } else if (evaluated) {\n        this.setState({\n          currentVal: value,\n          formula: value !== '0' ? value : ''\n        });\n      } else {\n        this.setState({\n          currentVal:\n            currentVal === '0' || isOperator.test(currentVal)\n              ? value\n              : currentVal + value,\n          formula:\n            currentVal === '0' && value === '0'\n              ? formula === ''\n                ? value\n                : formula\n              : /([^.0-9]0|^0)$/.test(formula)\n                ? formula.slice(0, -1) + value\n                : formula + value\n        });\n      }\n    }\n  }\n\n  handleDecimal() {\n    if (this.state.evaluated === true) {\n      this.setState({\n        currentVal: '0.',\n        formula: '0.',\n        evaluated: false\n      });\n    } else if (\n      !this.state.currentVal.includes('.') &&\n      !this.state.currentVal.includes('Limit')\n    ) {\n      this.setState({ evaluated: false });\n      if (this.state.currentVal.length > 21) {\n        this.maxDigitWarning();\n      } else if (\n        endsWithOperator.test(this.state.formula) ||\n        (this.state.currentVal === '0' && this.state.formula === '')\n      ) {\n        this.setState({\n          currentVal: '0.',\n          formula: this.state.formula + '0.'\n        });\n      } else {\n        this.setState({\n          currentVal: this.state.formula.match(/(-?\\d+\\.?\\d*)$/)[0] + '.',\n          formula: this.state.formula + '.'\n        });\n      }\n    }\n  }\n\n  initialize() {\n    this.setState({\n      currentVal: '0',\n      prevVal: '0',\n      formula: '',\n      currentSign: 'pos',\n      lastClicked: '',\n      evaluated: false\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"calculator\">\n          <Formula formula={this.state.formula.replace(/x/g, '⋅')} />\n          <Output currentValue={this.state.currentVal} />\n          <Buttons\n            decimal={this.handleDecimal}\n            evaluate={this.handleEvaluate}\n            initialize={this.initialize}\n            numbers={this.handleNumbers}\n            operators={this.handleOperators}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\r\n\r\nconst clearStyle = { background: '#ab3939' },\r\n    operatorStyle = { background: '#666666' },\r\n    equalsStyle = {\r\n        background: '#004466',\r\n        position: 'absolute',\r\n        height: 130,\r\n        bottom: 5\r\n    };\r\n\r\nexport default class Buttons extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button\r\n                    className=\"jumbo\"\r\n                    style={clearStyle}\r\n                    id=\"clear\"\r\n                    onClick={this.props.initialize}\r\n                    value=\"AC\"\r\n                >\r\n                    AC\r\n                </button>\r\n                <button\r\n                    id=\"divide\"\r\n                    onClick={this.props.operators}\r\n                    style={operatorStyle}\r\n                    value=\"/\"\r\n                >\r\n                    /\r\n                </button>\r\n                <button\r\n                    id=\"multiply\"\r\n                    onClick={this.props.operators}\r\n                    style={operatorStyle}\r\n                    value=\"x\"\r\n                >\r\n                    x\r\n                </button>\r\n                <button\r\n                    id=\"seven\"\r\n                    onClick={this.props.numbers}\r\n                    value=\"7\"\r\n                >\r\n                    7\r\n                </button>\r\n                <button\r\n                    id=\"eight\"\r\n                    onClick={this.props.numbers}\r\n                    value=\"8\"\r\n                >\r\n                    8\r\n                </button>\r\n                <button\r\n                    id=\"nine\"\r\n                    onClick={this.props.numbers}\r\n                    value=\"9\"\r\n                >\r\n                    9\r\n                </button>\r\n                <button\r\n                    id=\"subtract\"\r\n                    onClick={this.props.operators}\r\n                    style={operatorStyle}\r\n                    value=\"-\"\r\n                >\r\n                    -\r\n                </button>\r\n                <button\r\n                    id=\"four\"\r\n                    onClick={this.props.numbers}\r\n                    value=\"4\"\r\n                >\r\n                    4\r\n                </button>\r\n                <button\r\n                    id=\"five\"\r\n                    onClick={this.props.numbers}\r\n                    value=\"5\"\r\n                >\r\n                    5\r\n                </button>\r\n                <button\r\n                    id=\"six\"\r\n                    onClick={this.props.numbers}\r\n                    value=\"6\"\r\n                >\r\n                    6\r\n                </button>\r\n                <button\r\n                    id=\"add\"\r\n                    onClick={this.props.operators}\r\n                    style={operatorStyle}\r\n                    value=\"+\"\r\n                >\r\n                    +\r\n                </button>\r\n                <button\r\n                    id=\"one\"\r\n                    onClick={this.props.numbers}\r\n                    value=\"1\"\r\n                >\r\n                    1\r\n                </button>\r\n                <button\r\n                    id=\"two\"\r\n                    onClick={this.props.numbers}\r\n                    value=\"2\"\r\n                >\r\n                    2\r\n                </button>\r\n                <button\r\n                    id=\"three\"\r\n                    onClick={this.props.numbers}\r\n                    value=\"3\"\r\n                >\r\n                    3\r\n                </button>\r\n                <button\r\n                    className=\"jumbo\"\r\n                    id=\"zero\"\r\n                    onClick={this.props.numbers}\r\n                    value=\"0\"\r\n                >\r\n                    0\r\n                </button>\r\n                <button\r\n                    id=\"decimal\"\r\n                    onClick={this.props.decimal}\r\n                    value=\".\"\r\n                >\r\n                    .\r\n                </button>\r\n                <button\r\n                    id=\"equal\"\r\n                    onClick={this.props.evaluate}\r\n                    style={equalsStyle}\r\n                    value=\"=\"\r\n                >\r\n                    =\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Formula extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"formulaScreen\">\r\n                {this.props.formula}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Output extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"outputScreen\" id=\"display\">\r\n                {this.props.currentValue}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}